{"ast":null,"code":"var _jsxFileName = \"/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_1/task3/src/Components/ChessBoard.jsx\";\nimport React from \"react\";\nimport \"./ChessBoardStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = () => {\n  const renderCell = (row, col) => {\n    const isBlack = (row + col) % 2 === 1;\n    const notation = getCellNotation(row, col);\n    const cellColor = isBlack ? \"black\" : \"white\";\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: `cell ${cellColor}`\n    }, `${row}-${col}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  };\n  const getCellNotation = (row, col) => {\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n    const number = 8 - row;\n    const letter = letters[col];\n    return `${letter}${number}`;\n  };\n  const renderRow = row => {\n    const cells = [];\n    for (let col = 0; col < 8; col++) {\n      cells.push(renderCell(row, col));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: cells\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  };\n  const renderChessboard = () => {\n    const rows = [];\n    for (let row = 0; row < 8; row++) {\n      rows.push(renderRow(row));\n    }\n    return rows;\n  };\n  const renderLeftNotations = () => {\n    const notations = [\"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"];\n    return notations.map((notation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-notation\",\n      children: notation\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this));\n  };\n  const renderRightNotations = () => {\n    const notations = [\"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"];\n    return notations.map((notation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-notation\",\n      children: notation\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this));\n  };\n  const renderTopNotations = () => {\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n    return letters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n      className: \"top-notation\",\n      children: letter\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this));\n  };\n  const renderBottomNotations = () => {\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n    return letters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-notation\",\n      children: letter\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"chessboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"top-notations\",\n        children: renderTopNotations()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-notations\",\n        children: renderLeftNotations()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), renderChessboard(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-notations\",\n        children: renderRightNotations()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-notations\",\n        children: renderBottomNotations()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChessBoard","renderCell","row","col","isBlack","notation","getCellNotation","cellColor","className","fileName","_jsxFileName","lineNumber","columnNumber","letters","number","letter","renderRow","cells","push","children","renderChessboard","rows","renderLeftNotations","notations","map","index","renderRightNotations","renderTopNotations","renderBottomNotations","_c","$RefreshReg$"],"sources":["/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_1/task3/src/Components/ChessBoard.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./ChessBoardStyle.css\";\n\nconst ChessBoard = () => {\n    const renderCell = (row, col) => {\n        const isBlack = (row + col) % 2 === 1;\n        const notation = getCellNotation(row, col);\n        const cellColor = isBlack ? \"black\" : \"white\";\n\n        return (\n            <td className={`cell ${cellColor}`} key={`${row}-${col}`}>\n            </td>\n        );\n    };\n\n    const getCellNotation = (row, col) => {\n        const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n        const number = 8 - row;\n        const letter = letters[col];\n        return `${letter}${number}`;\n    };\n\n    const renderRow = (row) => {\n        const cells = [];\n        for (let col = 0; col < 8; col++) {\n            cells.push(renderCell(row, col));\n        }\n        return <div className=\"row\" key={row}>{cells}</div>;\n    };\n\n    const renderChessboard = () => {\n        const rows = [];\n        for (let row = 0; row < 8; row++) {\n            rows.push(renderRow(row));\n        }\n        return rows;\n    };\n\n    const renderLeftNotations = () => {\n        const notations = [\"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"];\n        return notations.map((notation, index) => (\n            <div className=\"left-notation\" key={index}>{notation}</div>\n        ));\n    };\n\n    const renderRightNotations = () => {\n        const notations = [\"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"];\n        return notations.map((notation, index) => (\n            <div className=\"right-notation\" key={index}>{notation}</div>\n        ));\n    };\n\n    const renderTopNotations = () => {\n        const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n        return letters.map((letter, index) => (\n            <th className=\"top-notation\" key={index}>{letter}</th>\n        ));\n    };\n\n    const renderBottomNotations = () => {\n        const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n        return letters.map((letter, index) => (\n            <div className=\"bottom-notation\" key={index}>{letter}</div>\n        ));\n    };\n\n    return (\n        <div>\n            <table className=\"chessboard\">\n                <tr className=\"top-notations\">{renderTopNotations()}</tr>\n                <div className=\"left-notations\">{renderLeftNotations()}</div>\n                {renderChessboard()}\n                <div className=\"right-notations\">{renderRightNotations()}</div>\n                <div className=\"bottom-notations\">{renderBottomNotations()}</div>\n            </table>\n        </div>\n    );\n};\n\nexport default ChessBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}