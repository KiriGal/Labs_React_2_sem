{"ast":null,"code":"var _jsxFileName = \"/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_6/task1/src/components/ColorPicker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ColorPickerStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateRandomColor = () => {\n  const red = Math.floor(Math.random() * 256);\n  const green = Math.floor(Math.random() * 256);\n  const blue = Math.floor(Math.random() * 256);\n  return [red, green, blue];\n};\nconst generateRGBColorsArray = length => {\n  const colors = [];\n  for (let i = 0; i < length; i++) {\n    const color = generateRandomColor();\n    colors.push(color);\n  }\n  return colors;\n};\nconst rgbColorsArray = generateRGBColorsArray(100);\nconst ColorPicker = () => {\n  _s();\n  const [selectedColor, setSelectedColor] = useState({\n    a: 0,\n    b: 0,\n    c: 0\n  });\n  const [saveColor, setSaveColor] = useState(false);\n  const [listColor, setListColor] = useState([]);\n  useEffect(() => {\n    setSaveColor(false);\n  }, [saveColor]);\n  const handleClick = color => {\n    setSelectedColor({\n      a: color[0],\n      b: color[1],\n      c: color[2]\n    });\n  };\n  const handleClickReset = e => {\n    setSelectedColor({\n      a: 0,\n      b: 0,\n      c: 0\n    });\n  };\n  const handleClickSave = e => {\n    setSaveColor(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-color\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-Color\",\n        style: {\n          width: '300px',\n          height: '300px',\n          backgroundColor: `rgb(${selectedColor.a}, ${selectedColor.b}, ${selectedColor.c})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleClickReset(e),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleClickSave(e),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palette\",\n      children: rgbColorsArray.map((color, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '60px',\n          height: '60px',\n          backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`\n        },\n        onClick: e => handleClick(color)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(ColorPicker, \"dRxCVqMxbUVG7ieMZae4ecQduA4=\");\n_c = ColorPicker;\nexport default ColorPicker;\nvar _c;\n$RefreshReg$(_c, \"ColorPicker\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","generateRandomColor","red","Math","floor","random","green","blue","generateRGBColorsArray","length","colors","i","color","push","rgbColorsArray","ColorPicker","_s","selectedColor","setSelectedColor","a","b","c","saveColor","setSaveColor","listColor","setListColor","handleClick","handleClickReset","e","handleClickSave","children","className","style","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_6/task1/src/components/ColorPicker.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './ColorPickerStyle.css';\n\nconst generateRandomColor = () => {\n    const red = Math.floor(Math.random() * 256);\n    const green = Math.floor(Math.random() * 256);\n    const blue = Math.floor(Math.random() * 256);\n    return [red, green, blue];\n};\n\nconst generateRGBColorsArray = (length) => {\n    const colors = [];\n    for (let i = 0; i < length; i++) {\n        const color = generateRandomColor();\n        colors.push(color);\n    }\n    return colors;\n};\n\nconst rgbColorsArray = generateRGBColorsArray(100);\nconst ColorPicker = () => {\n    const [selectedColor, setSelectedColor] = useState({a: 0, b: 0, c: 0});\n    const [saveColor, setSaveColor] = useState(false);\n    const [listColor, setListColor] = useState([])\n\n    useEffect(() => {\n\n        setSaveColor(false);\n    }, [saveColor]);\n\n    const handleClick = (color) => {\n        setSelectedColor({a: color[0], b: color[1], c: color[2]});\n    }\n\n    const handleClickReset = (e) => {\n        setSelectedColor({a: 0, b: 0, c: 0});\n    }\n\n    const handleClickSave = (e) => {\n        setSaveColor(true);\n    }\n\n    return (\n        <div>\n            <div className=\"view-color\">\n                <div\n                    className=\"block-Color\"\n                    style={{\n                        width: '300px',\n                        height: '300px',\n                        backgroundColor: `rgb(${selectedColor.a}, ${selectedColor.b}, ${selectedColor.c})`,\n                    }}\n                ></div>\n                <button onClick={e => handleClickReset(e)}>Reset</button>\n                <button onClick={e => handleClickSave(e)}>Save</button>\n            </div>\n\n            <div className=\"palette\">\n                {rgbColorsArray.map((color, index) => (\n                    <button\n                        key={index}\n                        style={{\n                            width: '60px',\n                            height: '60px',\n                            backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\n                        }}\n                        onClick={e => handleClick(color)}\n                    ></button>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ColorPicker;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}