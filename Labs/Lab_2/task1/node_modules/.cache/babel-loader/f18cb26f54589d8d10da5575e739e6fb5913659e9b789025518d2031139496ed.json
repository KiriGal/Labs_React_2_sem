{"ast":null,"code":"var _jsxFileName = \"/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_2/task1/src/components/Clock.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date()\n    };\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  tick() {\n    this.setState({\n      time: new Date()\n    });\n  }\n  formatTime(date) {\n    const {\n      format\n    } = this.props;\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let seconds = date.getSeconds();\n    if (format === \"12\") {\n      const ampm = hours >= 12 ? \"PM\" : \"AM\";\n      hours = hours % 12 || 12;\n      return `${hours}:${this.padTime(minutes)}:${this.padTime(seconds)} ${ampm}`;\n    } else {\n      return `${this.padTime(hours)}:${this.padTime(minutes)}:${this.padTime(seconds)}`;\n    }\n  }\n  padTime(time) {\n    return time < 10 ? \"0\" + time : time;\n  }\n  render() {\n    const {\n      timezone\n    } = this.props;\n    const {\n      time\n    } = this.state;\n    const localtime = new Date(time.getTime() + time.getTimezoneOffset() * 60000);\n    const timezoneOffset = Number(timezone.substring(1)) * 60;\n    const targetTime = new Date(localtime.getTime() + timezoneOffset * 60000);\n    const formattedTime = this.formatTime(targetTime);\n    console.log(props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formattedTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n}\nexport default Clock;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Clock","Component","constructor","props","state","time","Date","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","formatTime","date","format","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","padTime","render","timezone","localtime","getTime","getTimezoneOffset","timezoneOffset","Number","substring","targetTime","formattedTime","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_2/task1/src/components/Clock.jsx"],"sourcesContent":["import React from \"react\";\n\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date(),\n        };\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        this.setState({\n            time: new Date(),\n        });\n    }\n\n    formatTime(date) {\n        const { format } = this.props;\n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        let seconds = date.getSeconds();\n\n        if (format === \"12\") {\n            const ampm = hours >= 12 ? \"PM\" : \"AM\";\n            hours = hours % 12 || 12;\n            return `${hours}:${this.padTime(minutes)}:${this.padTime(\n                seconds\n            )} ${ampm}`;\n        } else {\n            return `${this.padTime(hours)}:${this.padTime(minutes)}:${this.padTime(\n                seconds\n            )}`;\n        }\n    }\n\n    padTime(time) {\n        return time < 10 ? \"0\" + time : time;\n    }\n    render() {\n        const { timezone } = this.props;\n        const { time } = this.state;\n        const localtime = new Date(\n            time.getTime() + time.getTimezoneOffset() * 60000\n        );\n        const timezoneOffset = Number(timezone.substring(1)) * 60;\n        const targetTime = new Date(\n            localtime.getTime() + timezoneOffset * 60000\n        );\n        const formattedTime = this.formatTime(targetTime);\n\n        console.log(props);\n        return <div>{formattedTime}</div>;\n    }\n}\n\nexport default Clock;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,SAASH,KAAK,CAACI,SAAS,CAAC;EAChCC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,IAAI,EAAE,IAAIC,IAAI,CAAC;IACnB,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACC,OAAO,GAAGC,WAAW,CAAC,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;EACvD;EAEAC,oBAAoBA,CAAA,EAAG;IACnBC,aAAa,CAAC,IAAI,CAACJ,OAAO,CAAC;EAC/B;EAEAE,IAAIA,CAAA,EAAG;IACH,IAAI,CAACG,QAAQ,CAAC;MACVR,IAAI,EAAE,IAAIC,IAAI,CAAC;IACnB,CAAC,CAAC;EACN;EAEAQ,UAAUA,CAACC,IAAI,EAAE;IACb,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACb,KAAK;IAC7B,IAAIc,KAAK,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC;IAC3B,IAAIC,OAAO,GAAGJ,IAAI,CAACK,UAAU,CAAC,CAAC;IAC/B,IAAIC,OAAO,GAAGN,IAAI,CAACO,UAAU,CAAC,CAAC;IAE/B,IAAIN,MAAM,KAAK,IAAI,EAAE;MACjB,MAAMO,IAAI,GAAGN,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;MACtCA,KAAK,GAAGA,KAAK,GAAG,EAAE,IAAI,EAAE;MACxB,OAAQ,GAAEA,KAAM,IAAG,IAAI,CAACO,OAAO,CAACL,OAAO,CAAE,IAAG,IAAI,CAACK,OAAO,CACpDH,OACJ,CAAE,IAAGE,IAAK,EAAC;IACf,CAAC,MAAM;MACH,OAAQ,GAAE,IAAI,CAACC,OAAO,CAACP,KAAK,CAAE,IAAG,IAAI,CAACO,OAAO,CAACL,OAAO,CAAE,IAAG,IAAI,CAACK,OAAO,CAClEH,OACJ,CAAE,EAAC;IACP;EACJ;EAEAG,OAAOA,CAACnB,IAAI,EAAE;IACV,OAAOA,IAAI,GAAG,EAAE,GAAG,GAAG,GAAGA,IAAI,GAAGA,IAAI;EACxC;EACAoB,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACvB,KAAK;IAC/B,MAAM;MAAEE;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAC3B,MAAMuB,SAAS,GAAG,IAAIrB,IAAI,CACtBD,IAAI,CAACuB,OAAO,CAAC,CAAC,GAAGvB,IAAI,CAACwB,iBAAiB,CAAC,CAAC,GAAG,KAChD,CAAC;IACD,MAAMC,cAAc,GAAGC,MAAM,CAACL,QAAQ,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;IACzD,MAAMC,UAAU,GAAG,IAAI3B,IAAI,CACvBqB,SAAS,CAACC,OAAO,CAAC,CAAC,GAAGE,cAAc,GAAG,KAC3C,CAAC;IACD,MAAMI,aAAa,GAAG,IAAI,CAACpB,UAAU,CAACmB,UAAU,CAAC;IAEjDE,OAAO,CAACC,GAAG,CAACjC,KAAK,CAAC;IAClB,oBAAOJ,OAAA;MAAAsC,QAAA,EAAMH;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACrC;AACJ;AAEA,eAAezC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}