{"ast":null,"code":"var _jsxFileName = \"/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_4/task1/src/components/ToDoForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoForm = () => {\n  _s();\n  const [task, setTask] = useState(\"\");\n  const [taskDirty, setTaskDirty] = useState(false);\n  const [taskError, setTaskError] = useState(\"Поле task пустое\");\n  const [formValid, setFormValid] = useState(false);\n  useEffect(() => {\n    if (taskError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }, [taskError]);\n  const taskHandler = e => {\n    setTask(e.target.value);\n    if (e.target.value.length < 2 && e.target.value.length > 30) {\n      setTaskError(\"Incorrect task\");\n    } else {\n      setTaskError(\"\");\n    }\n  };\n  const blurHandler = e => {\n    setTaskDirty(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [taskDirty && taskError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: taskError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Write your task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: task,\n        type: \"text\",\n        onChange: e => taskHandler(e),\n        onBlur: e => blurHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formValid,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDoForm, \"rmZ4L/5aol1CPzPOqhAi8OyzTSk=\");\n_c = ToDoForm;\nexport default ToDoForm;\nvar _c;\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ToDoForm","_s","task","setTask","taskDirty","setTaskDirty","taskError","setTaskError","formValid","setFormValid","taskHandler","e","target","value","length","blurHandler","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_4/task1/src/components/ToDoForm.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nconst ToDoForm = () => {\n    const [task, setTask] = useState(\"\");\n    const [taskDirty, setTaskDirty] = useState(false);\n    const [taskError, setTaskError] = useState(\"Поле task пустое\");\n    const [formValid, setFormValid] = useState(false);\n\n\n    useEffect(() => {\n        if(taskError){\n            setFormValid(false);\n        }else{\n            setFormValid(true);\n        }\n    }, [taskError]);\n\n    const taskHandler = (e) => {\n        setTask(e.target.value);\n\n        if(e.target.value.length < 2 && e.target.value.length > 30){\n            setTaskError(\"Incorrect task\");\n        }else {\n            setTaskError(\"\");\n        }\n    }\n\n    const blurHandler = (e) => {\n        setTaskDirty(true);\n    }\n\n    return (\n        <div>\n            <form>\n                {(taskDirty && taskError) && <div style={{color: \"red\"}}>{taskError}</div>}\n                <h1>Write your task</h1>\n                <input value={task} type=\"text\" onChange={e => taskHandler(e)} onBlur={e => blurHandler(e)}/>\n                <button disabled={!formValid} >Add</button>\n            </form>\n        </div>\n    );\n};\n\nexport default ToDoForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,kBAAkB,CAAC;EAC9D,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAGjDD,SAAS,CAAC,MAAM;IACZ,IAAGU,SAAS,EAAC;MACTG,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,MAAI;MACDA,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEf,MAAMI,WAAW,GAAIC,CAAC,IAAK;IACvBR,OAAO,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAEvB,IAAGF,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,IAAIH,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,EAAE,EAAC;MACvDP,YAAY,CAAC,gBAAgB,CAAC;IAClC,CAAC,MAAK;MACFA,YAAY,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EAED,MAAMQ,WAAW,GAAIJ,CAAC,IAAK;IACvBN,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACIN,OAAA;IAAAiB,QAAA,eACIjB,OAAA;MAAAiB,QAAA,GACMZ,SAAS,IAAIE,SAAS,iBAAKP,OAAA;QAAKkB,KAAK,EAAE;UAACC,KAAK,EAAE;QAAK,CAAE;QAAAF,QAAA,EAAEV;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1EvB,OAAA;QAAAiB,QAAA,EAAI;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBvB,OAAA;QAAOc,KAAK,EAAEX,IAAK;QAACqB,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEb,CAAC,IAAID,WAAW,CAACC,CAAC,CAAE;QAACc,MAAM,EAAEd,CAAC,IAAII,WAAW,CAACJ,CAAC;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7FvB,OAAA;QAAQ2B,QAAQ,EAAE,CAAClB,SAAU;QAAAQ,QAAA,EAAE;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACrB,EAAA,CAvCID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}