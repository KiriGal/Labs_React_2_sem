{"ast":null,"code":"var _jsxFileName = \"/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_9/task1/src/components/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  ProductCatalog\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchType, setSearchType] = useState('exact');\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearchTermChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleSearchTypeChange = event => {\n    setSearchType(event.target.value);\n  };\n  const handleSearch = () => {\n    let results = [];\n    if (searchType === 'exact') {\n      results = ProductCatalog.filter(product => product.Name.toLowerCase() === searchTerm.toLowerCase());\n    } else if (searchType === 'partial') {\n      results = ProductCatalog.filter(product => product.Name.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    setSearchResults(results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: handleSearchTermChange,\n      placeholder: \"Enter search term\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: searchType,\n      onChange: handleSearchTypeChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"exact\",\n        children: \"Exact Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"partial\",\n        children: \"Partial Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"UzIaCN4F+eDsdwFSnAA1m0GeKyI=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Search","ProductCatalog","_s","searchTerm","setSearchTerm","searchType","setSearchType","searchResults","setSearchResults","handleSearchTermChange","event","target","value","handleSearchTypeChange","handleSearch","results","filter","product","Name","toLowerCase","includes","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_9/task1/src/components/Search.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Search = ({ProductCatalog}) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [searchType, setSearchType] = useState('exact');\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleSearchTermChange = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const handleSearchTypeChange = (event) => {\n        setSearchType(event.target.value);\n    };\n\n    const handleSearch = () => {\n        let results = [];\n\n        if (searchType === 'exact') {\n            results = ProductCatalog.filter((product) =>\n                product.Name.toLowerCase() === searchTerm.toLowerCase()\n            );\n        } else if (searchType === 'partial') {\n            results = ProductCatalog.filter((product) =>\n                product.Name.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n        }\n\n        setSearchResults(results);\n    };\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={searchTerm}\n                onChange={handleSearchTermChange}\n                placeholder=\"Enter search term\"\n            />\n            <select value={searchType} onChange={handleSearchTypeChange}>\n                <option value=\"exact\">Exact Match</option>\n                <option value=\"partial\">Partial Match</option>\n            </select>\n        </div>\n    );\n};\n\nexport default Search;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAACC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EACrD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMY,sBAAsB,GAAIC,KAAK,IAAK;IACtCN,aAAa,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,sBAAsB,GAAIH,KAAK,IAAK;IACtCJ,aAAa,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIC,OAAO,GAAG,EAAE;IAEhB,IAAIV,UAAU,KAAK,OAAO,EAAE;MACxBU,OAAO,GAAGd,cAAc,CAACe,MAAM,CAAEC,OAAO,IACpCA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,KAAKhB,UAAU,CAACgB,WAAW,CAAC,CAC1D,CAAC;IACL,CAAC,MAAM,IAAId,UAAU,KAAK,SAAS,EAAE;MACjCU,OAAO,GAAGd,cAAc,CAACe,MAAM,CAAEC,OAAO,IACpCA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACjB,UAAU,CAACgB,WAAW,CAAC,CAAC,CAChE,CAAC;IACL;IAEAX,gBAAgB,CAACO,OAAO,CAAC;EAC7B,CAAC;EAED,oBACIhB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MACIuB,IAAI,EAAC,MAAM;MACXV,KAAK,EAAET,UAAW;MAClBoB,QAAQ,EAAEd,sBAAuB;MACjCe,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACF7B,OAAA;MAAQa,KAAK,EAAEP,UAAW;MAACkB,QAAQ,EAAEV,sBAAuB;MAAAQ,QAAA,gBACxDtB,OAAA;QAAQa,KAAK,EAAC,OAAO;QAAAS,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1C7B,OAAA;QAAQa,KAAK,EAAC,SAAS;QAAAS,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA3CIF,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AA6CZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}