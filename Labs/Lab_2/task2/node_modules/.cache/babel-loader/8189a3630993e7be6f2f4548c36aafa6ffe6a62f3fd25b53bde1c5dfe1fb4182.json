{"ast":null,"code":"var _jsxFileName = \"/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_2/task2/src/Components/JobMenu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst jobs = [{\n  id: 1,\n  name: \"Developer\"\n}, {\n  id: 2,\n  name: \"Designer\"\n}, {\n  id: 3,\n  name: \"Writer\"\n}, {\n  id: 4,\n  name: \"Teacher\"\n}, {\n  id: 5,\n  name: \"Engineer\"\n}];\nconst JobMenu = () => {\n  _s();\n  const [selectedJobs, setSelectedJobs] = useState([]);\n  const [selectedMenuOptions, setSelectedMenuOptions] = useState([]);\n  const handleJobChange = event => {\n    const jobName = event.target.value;\n    if (event.target.checked) {\n      setSelectedJobs([...selectedJobs, jobName]);\n    } else {\n      setSelectedJobs(selectedJobs.filter(job => job !== jobName));\n    }\n  };\n  const handleMenuOptionChange = event => {\n    const optionName = event.target.value;\n    if (event.target.checked) {\n      setSelectedMenuOptions([...selectedMenuOptions, optionName]);\n    } else {\n      setSelectedMenuOptions(selectedMenuOptions.filter(option => option !== optionName));\n    }\n  };\n  const isJobSelected = jobName => {\n    return selectedJobs.includes(jobName);\n  };\n  const isMenuOptionSelected = optionName => {\n    return selectedMenuOptions.includes(optionName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select professions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: job.name,\n          checked: isJobSelected(job.name),\n          onChange: handleJobChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), job.name]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select menu options:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), selectedJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: job\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), menuOptionsByJob[job].map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: option,\n            checked: isMenuOptionSelected(option),\n            onChange: handleMenuOptionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this), option]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this))]\n      }, job, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(JobMenu, \"z2XQL/sBTnX3flblwb5GzF9NYFU=\");\n_c = JobMenu;\nconst menuOptionsByJob = {\n  Developer: [\"Tutorials\", \"Code Samples\", \"Frameworks\", \"Tools\", \"Blogs\", \"Forums\", \"Courses\"],\n  Designer: [\"Inspiration\", \"Color Palettes\", \"Typography\", \"UI Kits\", \"Design Tools\", \"Communities\", \"Courses\"],\n  Writer: [\"Writing Tips\", \"Grammar Resources\", \"Publishing Platforms\", \"Writing Prompts\", \"Literary Magazines\", \"Writing Communities\", \"Courses\"],\n  Teacher: [\"Lesson Plans\", \"Teaching Resources\", \"Educational Websites\", \"Classroom Management\", \"Professional Development\", \"Teaching Communities\", \"Courses\"],\n  Engineer: [\"Engineering Principles\", \"Code Repositories\", \"Technical Documentation\", \"Hardware Resources\", \"Engineering Forums\", \"Engineering Communities\", \"Courses\"]\n};\nexport default JobMenu;\nvar _c;\n$RefreshReg$(_c, \"JobMenu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","jobs","id","name","JobMenu","_s","selectedJobs","setSelectedJobs","selectedMenuOptions","setSelectedMenuOptions","handleJobChange","event","jobName","target","value","checked","filter","job","handleMenuOptionChange","optionName","option","isJobSelected","includes","isMenuOptionSelected","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","menuOptionsByJob","index","_c","Developer","Designer","Writer","Teacher","Engineer","$RefreshReg$"],"sources":["/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_2/task2/src/Components/JobMenu.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst jobs = [\n    { id: 1, name: \"Developer\" },\n    { id: 2, name: \"Designer\" },\n    { id: 3, name: \"Writer\" },\n    { id: 4, name: \"Teacher\" },\n    { id: 5, name: \"Engineer\" },\n];\n\nconst JobMenu = () => {\n    const [selectedJobs, setSelectedJobs] = useState([]);\n    const [selectedMenuOptions, setSelectedMenuOptions] = useState([]);\n\n    const handleJobChange = (event) => {\n        const jobName = event.target.value;\n        if (event.target.checked) {\n            setSelectedJobs([...selectedJobs, jobName]);\n        } else {\n            setSelectedJobs(selectedJobs.filter((job) => job !== jobName));\n        }\n    };\n\n    const handleMenuOptionChange = (event) => {\n        const optionName = event.target.value;\n        if (event.target.checked) {\n            setSelectedMenuOptions([...selectedMenuOptions, optionName]);\n        } else {\n            setSelectedMenuOptions(\n                selectedMenuOptions.filter((option) => option !== optionName)\n            );\n        }\n    };\n\n    const isJobSelected = (jobName) => {\n        return selectedJobs.includes(jobName);\n    };\n\n    const isMenuOptionSelected = (optionName) => {\n        return selectedMenuOptions.includes(optionName);\n    };\n\n    return (\n        <div>\n            <h2>Job Menu</h2>\n            <div>\n                <h3>Select professions:</h3>\n                {jobs.map((job) => (\n                    <label key={job.id}>\n                        <input\n                            type=\"checkbox\"\n                            value={job.name}\n                            checked={isJobSelected(job.name)}\n                            onChange={handleJobChange}\n                        />\n                        {job.name}\n                    </label>\n                ))}\n            </div>\n            <div>\n                <h3>Select menu options:</h3>\n                {selectedJobs.map((job) => (\n                    <div key={job}>\n                        <h4>{job}</h4>\n                        {menuOptionsByJob[job].map((option, index) => (\n                            <label key={index}>\n                                <input\n                                    type=\"checkbox\"\n                                    value={option}\n                                    checked={isMenuOptionSelected(option)}\n                                    onChange={handleMenuOptionChange}\n                                />\n                                {option}\n                            </label>\n                        ))}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nconst menuOptionsByJob = {\n    Developer: [\n        \"Tutorials\",\n        \"Code Samples\",\n        \"Frameworks\",\n        \"Tools\",\n        \"Blogs\",\n        \"Forums\",\n        \"Courses\",\n    ],\n    Designer: [\n        \"Inspiration\",\n        \"Color Palettes\",\n        \"Typography\",\n        \"UI Kits\",\n        \"Design Tools\",\n        \"Communities\",\n        \"Courses\",\n    ],\n    Writer: [\n        \"Writing Tips\",\n        \"Grammar Resources\",\n        \"Publishing Platforms\",\n        \"Writing Prompts\",\n        \"Literary Magazines\",\n        \"Writing Communities\",\n        \"Courses\",\n    ],\n    Teacher: [\n        \"Lesson Plans\",\n        \"Teaching Resources\",\n        \"Educational Websites\",\n        \"Classroom Management\",\n        \"Professional Development\",\n        \"Teaching Communities\",\n        \"Courses\",\n    ],\n    Engineer: [\n        \"Engineering Principles\",\n        \"Code Repositories\",\n        \"Technical Documentation\",\n        \"Hardware Resources\",\n        \"Engineering Forums\",\n        \"Engineering Communities\",\n        \"Courses\",\n    ],\n};\n\nexport default JobMenu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}