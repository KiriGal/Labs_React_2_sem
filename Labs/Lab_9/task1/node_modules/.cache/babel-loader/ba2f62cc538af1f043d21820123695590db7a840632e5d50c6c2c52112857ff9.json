{"ast":null,"code":"var _jsxFileName = \"/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_9/task1/src/components/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  ProductCatalog\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchType, setSearchType] = useState('exact');\n  const handleSearchTermChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleSearchTypeChange = event => {\n    setSearchType(event.target.value);\n  };\n  useEffect(() => {\n    if (searchType === 'exact') {\n      setSearchProducts(ProductCatalog.filter(product => product.Name.toLowerCase() === searchTerm.toLowerCase()));\n    } else if (searchType === 'partial') {\n      setSearchProducts(ProductCatalog.filter(product => product.Name.toLowerCase().includes(searchTerm.toLowerCase())));\n    }\n  }, [searchTerm, searchType, ProductCatalog]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: handleSearchTermChange,\n      placeholder: \"Enter search term\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: searchType,\n      onChange: handleSearchTypeChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"exact\",\n        children: \"Exact Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"partial\",\n        children: \"Partial Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"7QRpAdJ30QLG2/sgprMxvCZyRyY=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Search","ProductCatalog","_s","searchTerm","setSearchTerm","searchType","setSearchType","handleSearchTermChange","event","target","value","handleSearchTypeChange","setSearchProducts","filter","product","Name","toLowerCase","includes","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alinakravcuk/Desktop/React Projects and Examples/Labs/Lab_9/task1/src/components/Search.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nconst Search = ({ProductCatalog}) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [searchType, setSearchType] = useState('exact');\n\n    const handleSearchTermChange = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const handleSearchTypeChange = (event) => {\n        setSearchType(event.target.value);\n    };\n\n    useEffect(() => {\n        if (searchType === 'exact') {\n            setSearchProducts(ProductCatalog.filter((product) =>\n                product.Name.toLowerCase() === searchTerm.toLowerCase()\n            ));\n        } else if (searchType === 'partial') {\n            setSearchProducts(ProductCatalog.filter((product) =>\n                product.Name.toLowerCase().includes(searchTerm.toLowerCase())\n            ));\n        }\n    }, [searchTerm, searchType, ProductCatalog]);\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={searchTerm}\n                onChange={handleSearchTermChange}\n                placeholder=\"Enter search term\"\n            />\n            <select value={searchType} onChange={handleSearchTypeChange}>\n                <option value=\"exact\">Exact Match</option>\n                <option value=\"partial\">Partial Match</option>\n            </select>\n        </div>\n    );\n};\n\nexport default Search;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,MAAM,GAAGA,CAAC;EAACC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAErD,MAAMU,sBAAsB,GAAIC,KAAK,IAAK;IACtCJ,aAAa,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,sBAAsB,GAAIH,KAAK,IAAK;IACtCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAEDd,SAAS,CAAC,MAAM;IACZ,IAAIS,UAAU,KAAK,OAAO,EAAE;MACxBO,iBAAiB,CAACX,cAAc,CAACY,MAAM,CAAEC,OAAO,IAC5CA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,KAAKb,UAAU,CAACa,WAAW,CAAC,CAC1D,CAAC,CAAC;IACN,CAAC,MAAM,IAAIX,UAAU,KAAK,SAAS,EAAE;MACjCO,iBAAiB,CAACX,cAAc,CAACY,MAAM,CAAEC,OAAO,IAC5CA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACd,UAAU,CAACa,WAAW,CAAC,CAAC,CAChE,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACb,UAAU,EAAEE,UAAU,EAAEJ,cAAc,CAAC,CAAC;EAE5C,oBACIF,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MACIoB,IAAI,EAAC,MAAM;MACXT,KAAK,EAAEP,UAAW;MAClBiB,QAAQ,EAAEb,sBAAuB;MACjCc,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACF1B,OAAA;MAAQW,KAAK,EAAEL,UAAW;MAACe,QAAQ,EAAET,sBAAuB;MAAAO,QAAA,gBACxDnB,OAAA;QAAQW,KAAK,EAAC,OAAO;QAAAQ,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1C1B,OAAA;QAAQW,KAAK,EAAC,SAAS;QAAAQ,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACvB,EAAA,CAtCIF,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAwCZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}